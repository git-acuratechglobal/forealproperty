// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'get_property_details.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

PropertyDetailModel _$PropertyDetailModelFromJson(Map<String, dynamic> json) =>
    PropertyDetailModel(
      viewType: (json['viewType'] as num?)?.toInt(),
      propertyUniqueId: json['propertyUniqueID'] as String?,
      propertyImageSequence: json['propertyImageSequence'],
      propertyFloorImageSequence: json['propertyFloorImageSequence'],
      uploadDocumentNameArray: json['uploadDocumentNameArray'],
      propertyPics: json['propertyPics'],
      contactsList: json['contactsList'],
      countofEnquiry: (json['countofEnquiry'] as num?)?.toInt(),
      countofopenhome: (json['countofopenhome'] as num?)?.toInt(),
      countofsaleoffers: (json['countofsaleoffers'] as num?)?.toInt(),
      countofRental: (json['countofRental'] as num?)?.toInt(),
      openHomeList: json['openHomeList'],
      uploadedImagesName: json['uploadedImagesName'],
      floorPics: json['floorPics'],
      uploadedFloorImagesName: json['uploadedFloorImagesName'],
      pageMode: (json['pageMode'] as num?)?.toInt(),
      uploadedDocuments: json['uploadedDocuments'],
      uploadedImages: json['uploadedImages'],
      location: json['location'],
      propertyHeading: json['propertyHeading'] as String?,
      propertyId: (json['propertyId'] as num?)?.toInt(),
      agencyId: (json['agencyId'] as num?)?.toInt(),
      agencyLogo: json['agencyLogo'] as String?,
      agencyBrandColor: json['agencyBrandColor'],
      agencyUniqueId: json['agencyUniqueId'],
      agencyName: json['agencyName'] as String?,
      address: json['address'],
      agentId: (json['agentId'] as num?)?.toInt(),
      agentPhotoPath: json['agent_Photo_Path'],
      agentName: json['agent_Name'] as String?,
      agentEmail: json['agent_Email'] as String?,
      agentTitle: json['agent_Title'],
      agentUniqueId: json['agentUniqueId'] as String?,
      agentYearsOfExperience:
          (json['agent_YearsOfExperience'] as num?)?.toInt(),
      agentLicenseExpiry: json['agent_LicenseExpiry'] == null
          ? null
          : DateTime.parse(json['agent_LicenseExpiry'] as String),
      agentEmergencyContactName: json['agent_EmergencyContactName'],
      agentAreaofWorking: json['agent_AreaofWorking'],
      agentAddress: json['agent_Address'] as String?,
      agentContact: json['agent_Contact'] as String?,
      agentLicenseNumber: json['agent_LicenseNumber'] as String?,
      agentRegistraionExpiry: json['agent_RegistraionExpiry'],
      agentEmergencyContactDetails: json['agent_EmergencyContactDetails'],
      agentDescription: json['agent_Description'] as String?,
      agentResidentialAddress: json['agent_ResidentialAddress'],
      appraisalEmailLog: json['appraisalEmailLog'],
      userId: (json['userId'] as num?)?.toInt(),
      propertyContactId: json['propertyContactId'],
      isPropertyEnlist: json['isPropertyEnlist'] as bool?,
      propertyEnlistDate: json['propertyEnlistDate'] == null
          ? null
          : DateTime.parse(json['propertyEnlistDate'] as String),
      propertyContactName: json['propertyContactName'] as String?,
      propertyContactUid: json['propertyContactUID'],
      hastoDeletePictures: json['hastoDeletePictures'],
      hastoDeleteFloorPictures: json['hastoDeleteFloorPictures'],
      contactCompanyName: json['contactCompanyName'],
      primaryContactName: json['primaryContactName'],
      isLeasedSold: json['isLeasedSold'] as bool?,
      suburb: json['suburb'] as String?,
      ownerAccountFolio: json['ownerAccountFolio'],
      propertyName: json['propertyName'],
      note: json['note'],
      propertyGooglePlacesLocation:
          json['propertyGooglePlacesLocation'] as String?,
      propertyGooglePlacesLocationLat:
          json['propertyGooglePlacesLocationLat'] as String?,
      propertyGooglePlacesLocationLong:
          json['propertyGooglePlacesLocationLong'] as String?,
      getFormatedAddress: json['getFormatedAddress'] as String?,
      state: json['state'] as String?,
      postCode: json['postCode'] as String?,
      propertySaleRental: json['propertySaleRental'],
      propertyOccupiedTenanted: json['propertyOccupiedTenanted'],
      propertySaleRentalList: json['propertySaleRentalList'],
      propertyOccupiedTenantedList: json['propertyOccupiedTenantedList'],
      streetName: json['streetName'] as String?,
      unitNumber: json['unitNumber'] as String?,
      streetNumber: json['streetNumber'] as String?,
      propertyDescription: json['propertyDescription'] as String?,
      propertyReferenceField: json['propertyReferenceField'],
      countBedrooms: (json['countBedrooms'] as num?)?.toInt(),
      countCarParking: (json['countCarParking'] as num?)?.toInt(),
      countBathrooms: (json['countBathrooms'] as num?)?.toInt(),
      propertyType: json['propertyType'] as String?,
      propertyAgreementType: json['propertyAgreementType'],
      sPropertyType: json['sPropertyType'] as String?,
      propertyLandAreaL: json['propertyLandAreaL'],
      propertyLandAreaTypeList: json['propertyLandAreaTypeList'],
      propertyLandAreaW: (json['propertyLandAreaW'] as num?)?.toInt(),
      propertyBuildingTypeLotplan: json['propertyBuildingTypeLotplan'],
      propertyBuildingTypeLotplanName: json['propertyBuildingTypeLotplanName'],
      propertyBuildingTypeYearBuilt: json['propertyBuildingTypeYearBuilt'],
      propertyBuildingTypeYearBuiltName:
          json['propertyBuildingTypeYearBuiltName'],
      propertyBuildingTypeYearBuiltList:
          (json['propertyBuildingTypeYearBuiltList'] as List<dynamic>?)
              ?.map((e) => PropertyBuildingTypeYearBuiltList.fromJson(
                  e as Map<String, dynamic>))
              .toList(),
      propertyBuildingTypeZoning: json['propertyBuildingTypeZoning'] as String?,
      propertyBuildingTypeZoningName: json['propertyBuildingTypeZoningName'],
      propertySoldDate: json['propertySoldDate'],
      propertySoldPrice: json['propertySoldPrice'],
      createdDate: json['createdDate'] == null
          ? null
          : DateTime.parse(json['createdDate'] as String),
      isDeleted: json['isDeleted'],
      deletedOn: json['deletedOn'],
      isApproved: json['isApproved'],
      isPropertyScrap: json['isPropertyScrap'],
      isRemoveFromList: json['isRemoveFromList'],
      isAddedByAffiliate: json['isAddedByAffiliate'] as bool?,
      approvedOn: json['approvedOn'],
      propertyPrice: json['propertyPrice'],
      propertySellerFirmName: json['propertySellerFirmName'],
      propertySellerPrincipalName: json['propertySellerPrincipalName'],
      propertySellerAddress: json['propertySellerAddress'],
      propertySellerEmail: json['propertySellerEmail'],
      propertySellerPhone: json['propertySellerPhone'],
      propertySellerFax: json['propertySellerFax'],
      propertyBuyerFirmName: json['propertyBuyerFirmName'],
      propertyBuyerPrincipalName: json['propertyBuyerPrincipalName'],
      propertyBuyerAddress: json['propertyBuyerAddress'],
      propertyBuyerEmail: json['propertyBuyerEmail'],
      propertyBuyerPhone: json['propertyBuyerPhone'],
      propertyBuyerFax: json['propertyBuyerFax'],
      propertySellerConvyencor: json['propertySellerConvyencor'] == null
          ? null
          : PropertyErConvyencor.fromJson(
              json['propertySellerConvyencor'] as Map<String, dynamic>),
      propertyBuyerConvyencor: json['propertyBuyerConvyencor'] == null
          ? null
          : PropertyErConvyencor.fromJson(
              json['propertyBuyerConvyencor'] as Map<String, dynamic>),
      floorPlanByte: json['floorPlan_Byte'],
      floorPlanPath: json['floorPlan_Path'],
      listingDetails: (json['listingDetails'] as List<dynamic>?)
          ?.map((e) => ListingDetail.fromJson(e as Map<String, dynamic>))
          .toList(),
      propertyDocuments: json['propertyDocuments'] as List<dynamic>?,
      agreements: json['agreements'],
      saleAgreement: json['saleAgreement'],
      managementAgreement: json['managementAgreement'],
      tenantAgreement: json['tenantAgreement'],
      verificationProofs: json['verificationProofs'],
      propertyPictures: (json['propertyPictures'] as List<dynamic>?)
          ?.map((e) => PropertyPicture.fromJson(e as Map<String, dynamic>))
          .toList(),
      externalId1: json['externalId1'],
      externalId2: json['externalId2'],
      externalId3: json['externalId3'],
      webRootPath: json['webRootPath'],
      propertyLegalDetail: json['propertyLegalDetail'],
      purpose: json['purpose'] as String?,
      ePurpose: (json['ePurpose'] as num?)?.toInt(),
      purposeName: json['purposeName'],
      energyRating: json['energyRating'],
      energyRatingName: json['energyRatingName'],
      countEnsuites: (json['countEnsuites'] as num?)?.toInt(),
      countToilets: (json['countToilets'] as num?)?.toInt(),
      countGarageSpace: (json['countGarageSpace'] as num?)?.toInt(),
      countLivingAreas: (json['countLivingAreas'] as num?)?.toInt(),
      balcony: json['balcony'] as bool?,
      deck: json['deck'] as bool?,
      outdoorEntertainmentArea: json['outdoorEntertainmentArea'] as bool?,
      remoteGarage: json['remoteGarage'] as bool?,
      shed: json['shed'] as bool?,
      swimmmingPoolInGround: json['swimmmingPoolInGround'] as bool?,
      coutryard: json['coutryard'] as bool?,
      fullyFenced: json['fullyFenced'] as bool?,
      outsideSpa: json['outsideSpa'] as bool?,
      secureParking: json['secureParking'] as bool?,
      swimmmingPoolAboveGround: json['swimmmingPoolAboveGround'] as bool?,
      tennisCourt: json['tennisCourt'] as bool?,
      alarmSystem: json['alarmSystem'] as bool?,
      builtInWardrobes: json['builtInWardrobes'] as bool?,
      ductedVacuumSystem: json['ductedVacuumSystem'] as bool?,
      gym: json['gym'] as bool?,
      intercom: json['intercom'] as bool?,
      rumpusRoom: json['rumpusRoom'] as bool?,
      workshop: json['workshop'] as bool?,
      broadbandInternetAvailable: json['broadbandInternetAvailable'] as bool?,
      dishwasher: json['dishwasher'] as bool?,
      floorboards: json['floorboards'] as bool?,
      insideSpa: json['insideSpa'] as bool?,
      payTvAccess: json['payTVAccess'] as bool?,
      study: json['study'] as bool?,
      airConditioning: json['airConditioning'] as bool?,
      ductedHeating: json['ductedHeating'] as bool?,
      gasHeating: json['gasHeating'] as bool?,
      openFireplace: json['openFireplace'] as bool?,
      splitSystemAirConditioning: json['splitSystemAirConditioning'] as bool?,
      ductedCooling: json['ductedCooling'] as bool?,
      evaporativeCooling: json['evaporativeCooling'] as bool?,
      hydraulicHeating: json['hydraulicHeating'] as bool?,
      reverseCycleAirConditioning: json['reverseCycleAirConditioning'] as bool?,
      splitSystemHeating: json['splitSystemHeating'] as bool?,
      greyWaterSystem: json['greyWaterSystem'] as bool?,
      solarPanels: json['solarPanels'] as bool?,
      solarHotWater: json['solarHotWater'] as bool?,
      waterTank: json['waterTank'] as bool?,
      showBasicDetails: json['showBasicDetails'] as bool?,
      propertyArea: json['propertyArea'],
      secondaryContacts: json['secondaryContacts'],
      imagesNameArray: json['imagesNameArray'],
      floorImagesNameArray: json['floorImagesNameArray'],
      propertyNotes: json['propertyNotes'] as List<dynamic>?,
      cmaReportPath: json['cmaReportPath'],
      appraisalUniqueId: json['appraisalUniqueId'],
      isDraft: json['isDraft'],
      recommededPriceFrom: json['recommededPriceFrom'],
      recommededPriceTo: json['recommededPriceTo'],
      cmaReportPrice: json['cmaReportPrice'],
      propertyStatusStage: (json['propertyStatusStage'] as num?)?.toInt(),
      affiliateId: json['affiliateId'],
      leadOnProgress: json['leadOnProgress'] as bool?,
      uploadOnPm: json['uploadOnPM'] as bool?,
      inspectionDue: json['inspectionDue'],
      inspectionFrequency: json['inspectionFrequency'],
      inspectionFrequencyType: json['inspectionFrequencyType'],
      listAppraisalNotes: json['listAppraisalNotes'],
      listAppraisalFollowup: json['listAppraisalFollowup'],
      appraisalModel: json['appraisalModel'],
      appraisalModellist: json['appraisalModellist'],
      addUpdateOfferModel: json['addUpdateOfferModel'],
      userType: json['userType'],
      agentList: json['agentList'],
      agentPropertiesModel: (json['agentPropertiesModel'] as List<dynamic>?)
          ?.map((e) => AgentPropertiesModel.fromJson(e as Map<String, dynamic>))
          .toList(),
      isWishlist: json['isWishlist'] as bool?,
      hasSolicitorDetails: json['hasSolicitorDetails'] as bool?,
      contactlistModel: json['contactlistModel'],
      contactHistoryList: json['contactHistoryList'],
      hdnPrimaryContact: json['hdnPrimaryContact'],
      primaryContactEmail: json['primaryContactEmail'],
      propertyEnquiryCount: json['propertyEnquiryCount'],
      agreementType: json['agreementType'],
      propertyStatus: json['propertyStatus'],
      isNew: (json['isNew'] as num?)?.toInt(),
      isDualAgent: json['isDualAgent'] as bool?,
      leadAgent: json['leadAgent'],
      dualAgent: json['dualAgent'],
      dualAgentName: json['dualAgentName'] as String?,
      showText: json['showText'],
      isShowPrice: json['isShowPrice'] as bool?,
      isOpenHome: json['isOpenHome'],
      startTime: json['startTime'],
      endTime: json['endTime'],
      openHomeuniqueId: json['openHomeuniqueId'],
      eventDate: json['eventDate'],
      openHomeListingModel: json['openHomeListingModel'],
      addUpdatesPropertyOwnersModel: json['addUpdatesPropertyOwnersModel'],
      addUpdatePropertyAttributesModel:
          json['addUpdatePropertyAttributesModel'],
      addUpdatePropertyAdditionalDetailsModel:
          json['addUpdatePropertyAdditionalDetailsModel'],
      addUpdatePropertyLegalDetailsModel:
          json['addUpdatePropertyLegalDetailsModel'],
      addUpdatePropertyDocumentModel: json['addUpdatePropertyDocumentModel'],
      addContactDetails: json['addContactDetails'],
      tenantDetails: json['tenantDetails'],
      tenantFolioDetails: json['tenantFolioDetails'],
      rentPrice: (json['rentPrice'] as num?)?.toInt(),
      rentTenure: (json['rentTenure'] as num?)?.toInt(),
      reaUploadId: json['reaUploadId'],
      domainUploadId: json['domainUploadId'],
      listingStatus: json['listingStatus'],
      isCommercial: json['isCommercial'] as bool?,
      saveUpload: json['saveUpload'],
      isWaitingForApproval: json['isWaitingForApproval'] as bool?,
      waitingOperation: json['waitingOperation'],
      waitingPortalsToUpload: json['waitingPortalsToUpload'],
      isPrincipleLogged: json['isPrincipleLogged'] as bool?,
      isAppraisalAdded: json['isAppraisalAdded'] as bool?,
      isAgreementuploaded: json['isAgreementuploaded'] as bool?,
      isCosUploaded: json['isCOSUploaded'] as bool?,
      isListedProperty: json['isListedProperty'] as bool?,
      saleLeaseAgreementUploaded: json['saleLeaseAgreementUploaded'] as bool?,
      leasedSoldProperty: json['leasedSoldProperty'] as bool?,
      isPropertyLost: json['isPropertyLost'] as bool?,
      followUpDate: json['followUpDate'],
      addContact: json['addContact'] as bool?,
      updateHistories: json['updateHistories'],
      ownerFolioDetails: json['ownerFolioDetails'],
      redirectUrl: json['redirectUrl'],
    );

AgentPropertiesModel _$AgentPropertiesModelFromJson(
        Map<String, dynamic> json) =>
    AgentPropertiesModel(
      propertyUniqueId: json['propertyUniqueId'] as String?,
      propertyImage: json['propertyImage'] as String?,
      propertyPrice: json['propertyPrice'],
      enlistDate: json['enlistDate'] == null
          ? null
          : DateTime.parse(json['enlistDate'] as String),
      isWishlist: json['isWishlist'] as bool?,
    );

ListingDetail _$ListingDetailFromJson(Map<String, dynamic> json) =>
    ListingDetail(
      listingId: (json['listingId'] as num?)?.toInt(),
      propertySaleRental: (json['propertySaleRental'] as num?)?.toInt(),
      propertyId: (json['propertyId'] as num?)?.toInt(),
      reaUploadId: json['reaUploadId'] as String?,
      domainUploadId: json['domainUploadId'],
      listingStatus: (json['listingStatus'] as num?)?.toInt(),
      propertyPrice: json['propertyPrice'],
      isCommercial: json['isCommercial'] as bool?,
      propertyAgreementType: json['propertyAgreementType'],
      isNew: (json['isNew'] as num?)?.toInt(),
      dualAgent: json['dualAgent'],
      isDualAgent: json['isDualAgent'] as bool?,
      isShowPrice: json['isShowPrice'] as bool?,
      showText: json['showText'] as String?,
      address: json['address'] as String?,
      propertyUId: json['propertyUId'] as String?,
      agentName: json['agentName'] as String?,
      dualAgentName: json['dualAgentName'] as String?,
      sListingStatus: json['sListingStatus'] as String?,
      sAgreementType: json['sAgreementType'] as String?,
      rent: (json['rent'] as num?)?.toInt(),
      dateAvailable: json['dateAvailable'] == null
          ? null
          : DateTime.parse(json['dateAvailable'] as String),
      listingAgentId: (json['listingAgentId'] as num?)?.toInt(),
      listingAgentName: json['listingAgentName'] as String?,
      enquiryCount: (json['enquiryCount'] as num?)?.toInt(),
      createdAt: json['createdAt'] == null
          ? null
          : DateTime.parse(json['createdAt'] as String),
      reaUploadedDate: json['reaUploadedDate'] == null
          ? null
          : DateTime.parse(json['reaUploadedDate'] as String),
      domainUploadedDate: json['domainUploadedDate'],
    );

PropertyBuildingTypeYearBuiltList _$PropertyBuildingTypeYearBuiltListFromJson(
        Map<String, dynamic> json) =>
    PropertyBuildingTypeYearBuiltList(
      disabled: json['disabled'] as bool?,
      group: json['group'],
      selected: json['selected'] as bool?,
      text: json['text'] as String?,
      value: json['value'] as String?,
    );

PropertyErConvyencor _$PropertyErConvyencorFromJson(
        Map<String, dynamic> json) =>
    PropertyErConvyencor(
      convyencorId: (json['convyencorId'] as num?)?.toInt(),
      firmName: json['firmName'],
      principalName: json['principalName'],
      address: json['address'],
      email: json['email'],
      phone: json['phone'],
      fax: json['fax'],
    );

PropertyPicture _$PropertyPictureFromJson(Map<String, dynamic> json) =>
    PropertyPicture(
      picId: (json['picId'] as num?)?.toInt(),
      picPath: json['picPath'] as String?,
      createdDate: json['createdDate'] == null
          ? null
          : DateTime.parse(json['createdDate'] as String),
      propertyId: (json['propertyId'] as num?)?.toInt(),
      isEnabled: json['isEnabled'],
      picName: json['picName'],
      picDesc: json['picDesc'],
      picAltText: json['picAltText'],
      isDeleted: json['isDeleted'],
      deletedOn: json['deletedOn'],
      type: (json['type'] as num?)?.toInt(),
      picNum: (json['picNum'] as num?)?.toInt(),
    );
