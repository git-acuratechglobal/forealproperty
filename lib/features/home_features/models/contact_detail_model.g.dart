// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'contact_detail_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

ContactDetailModel _$ContactDetailModelFromJson(Map<String, dynamic> json) =>
    ContactDetailModel(
      userId: (json['userId'] as num?)?.toInt(),
      supplierId: json['supplierId'],
      firstName: json['firstName'] as String?,
      photoByte: json['photoByte'],
      photoPath: json['photo_Path'],
      bankReference: json['bankReference'],
      profileCropedImg: json['profile_Croped_Img'],
      lastName: json['lastName'] as String?,
      email: json['email'] as String?,
      userType: (json['userType'] as num?)?.toInt(),
      userRoleId: (json['userRoleID'] as num?)?.toInt(),
      subscriptionId: (json['subscriptionId'] as num?)?.toInt(),
      agencyUniqueId: json['agencyUniqueID'],
      address: json['address'],
      addressPostCode: json['addressPostCode'],
      addressState: json['addressState'],
      viewType: (json['viewType'] as num?)?.toInt(),
      contact: json['contact'],
      agencyId: json['agencyID'],
      agentUniqueId: json['agentUniqueId'],
      agentId: json['agentId'],
      webRootPath: json['webRootPath'],
      agentList: json['agentList'],
      contactId: (json['contactId'] as num?)?.toInt(),
      contactUniqueId: json['contactUniqueId'] as String?,
      contactDisplayId: json['contactDisplayId'],
      titleValues: json['titleValues'],
      birthday: json['birthday'],
      title: json['title'],
      contactStatusId: json['contactStatusId'],
      typeIam: json['typeIAM'],
      otherDetailsType: json['otherDetailsType'],
      priceRange: json['priceRange'],
      anniversary: json['anniversary'],
      remarks: json['remarks'],
      notes: json['notes'],
      isExternal: json['isExternal'],
      contactStatusValues: json['contactStatusValues'],
      ddlOtherDetailsType: json['ddlOtherDetailsType'],
      createdDate: json['createdDate'] as String?,
      mobileNumber: json['mobileNumber'] as String?,
      landlineNumber: json['landlineNumber'],
      landlineNumber1: json['landlineNumber1'],
      companyAddress: json['companyAddress'],
      companyName: json['companyName'],
      propertyAddress: json['propertyAddress'],
      abn: json['abn'],
      acn: json['acn'],
      isMarried: json['isMarried'] as bool?,
      maritalStatus: (json['maritalStatus'] as num?)?.toInt(),
      spouseName: json['spouseName'],
      spouseMobileNumber: json['spouseMobileNumber'],
      spouseAddress: json['spouseAddress'],
      spouseEmail: json['spouseEmail'],
      isInvestor: json['isInvestor'] as bool?,
      isDeveloper: json['isDeveloper'] as bool?,
      isFirstHomeBuyer: json['isFirstHomeBuyer'] as bool?,
      isSelling: json['isSelling'] as bool?,
      isRenting: json['isRenting'] as bool?,
      isBuying: json['isBuying'] as bool?,
      isSupplier: json['isSupplier'] as bool?,
      priceRangeValues: json['priceRangeValues'],
      ddlMaritalStatus: json['ddlMaritalStatus'],
      postcode: json['postcode'],
      regions: json['regions'],
      facebookUrl: json['facebookUrl'],
      linkedinUrl: json['linkedinUrl'],
      twitterUrl: json['twitterUrl'],
      instagramUrl: json['instagramUrl'],
      isDeleted: json['isDeleted'] as bool?,
      communicationType: json['communicationType'],
      isNotice: json['isNotice'] as bool?,
      isEmail: json['isEmail'] as bool?,
      isPhone: json['isPhone'] as bool?,
      loggedUserName: json['loggedUserName'],
      communicationTypeList: json['communicationTypeList'],
      idType: json['idType'],
      idTypeList: json['idTypeList'],
      idNumber: json['idNumber'],
      bDocumentImage: json['bDocumentImage'],
      pDocumentImagePath: json['pDocumentImagePath'],
      isAddedByAffiliate: json['isAddedByAffiliate'] as bool?,
      affiliateId: json['affiliateId'],
      contactType: json['contactType'],
      contactCategory: (json['contactCategory'] as num?)?.toInt(),
      contactTypeList: json['contactTypeList'],
      enquiryListingModel: json['enquiryListingModel'],
      sellerEnquiryListingModel: json['sellerEnquiryListingModel'],
      offerListingModel: json['offerListingModel'],
      buyerOfferListingModel: json['buyerOfferListingModel'],
      contactNotes: (json['contactNotes'] as List<dynamic>?)
          ?.map((e) => ContactNote.fromJson(e as Map<String, dynamic>))
          .toList(),
      contactChanges: json['contactChanges'],
      isAgentLogged: json['isAgentLogged'] as bool?,
      isAffiliateLogged: json['isAffiliateLogged'] as bool?,
      loggedUserId: (json['loggedUserId'] as num?)?.toInt(),
      followupDate: json['followupDate'],
      note: json['note'],
      isPrimary: json['isPrimary'],
      tenantFolioDetails: json['tenantFolioDetails'] as List<dynamic>?,
      supplierDetails: json['supplierDetails'],
      propertyOwnerFolioDetails:
          json['propertyOwnerFolioDetails'] as List<dynamic>?,
      image: json['image'] as String?,
      contactReference: json['contactReference'],
      postCodeName: json['postCodeName'],
      solicitorFirmName: json['solicitorFirmName'],
      solicitorPrincipalName: json['solicitorPrincipalName'],
      solicitorAddress: json['solicitorAddress'],
      solicitorEmail: json['solicitorEmail'],
      solicitorPhone: json['solicitorPhone'],
      solicitorFax: json['solicitorFax'],
      propertyUniqueId: json['propertyUniqueId'],
    );

Map<String, dynamic> _$ContactDetailModelToJson(ContactDetailModel instance) =>
    <String, dynamic>{
      'userId': instance.userId,
      'supplierId': instance.supplierId,
      'firstName': instance.firstName,
      'photoByte': instance.photoByte,
      'photo_Path': instance.photoPath,
      'bankReference': instance.bankReference,
      'profile_Croped_Img': instance.profileCropedImg,
      'lastName': instance.lastName,
      'email': instance.email,
      'userType': instance.userType,
      'userRoleID': instance.userRoleId,
      'subscriptionId': instance.subscriptionId,
      'agencyUniqueID': instance.agencyUniqueId,
      'address': instance.address,
      'addressPostCode': instance.addressPostCode,
      'addressState': instance.addressState,
      'viewType': instance.viewType,
      'contact': instance.contact,
      'agencyID': instance.agencyId,
      'agentUniqueId': instance.agentUniqueId,
      'agentId': instance.agentId,
      'webRootPath': instance.webRootPath,
      'agentList': instance.agentList,
      'contactId': instance.contactId,
      'contactUniqueId': instance.contactUniqueId,
      'contactDisplayId': instance.contactDisplayId,
      'titleValues': instance.titleValues,
      'birthday': instance.birthday,
      'title': instance.title,
      'contactStatusId': instance.contactStatusId,
      'typeIAM': instance.typeIam,
      'otherDetailsType': instance.otherDetailsType,
      'priceRange': instance.priceRange,
      'anniversary': instance.anniversary,
      'remarks': instance.remarks,
      'notes': instance.notes,
      'isExternal': instance.isExternal,
      'contactStatusValues': instance.contactStatusValues,
      'ddlOtherDetailsType': instance.ddlOtherDetailsType,
      'createdDate': instance.createdDate,
      'mobileNumber': instance.mobileNumber,
      'landlineNumber': instance.landlineNumber,
      'landlineNumber1': instance.landlineNumber1,
      'companyAddress': instance.companyAddress,
      'companyName': instance.companyName,
      'propertyAddress': instance.propertyAddress,
      'abn': instance.abn,
      'acn': instance.acn,
      'isMarried': instance.isMarried,
      'maritalStatus': instance.maritalStatus,
      'spouseName': instance.spouseName,
      'spouseMobileNumber': instance.spouseMobileNumber,
      'spouseAddress': instance.spouseAddress,
      'spouseEmail': instance.spouseEmail,
      'isInvestor': instance.isInvestor,
      'isDeveloper': instance.isDeveloper,
      'isFirstHomeBuyer': instance.isFirstHomeBuyer,
      'isSelling': instance.isSelling,
      'isRenting': instance.isRenting,
      'isBuying': instance.isBuying,
      'isSupplier': instance.isSupplier,
      'priceRangeValues': instance.priceRangeValues,
      'ddlMaritalStatus': instance.ddlMaritalStatus,
      'postcode': instance.postcode,
      'regions': instance.regions,
      'facebookUrl': instance.facebookUrl,
      'linkedinUrl': instance.linkedinUrl,
      'twitterUrl': instance.twitterUrl,
      'instagramUrl': instance.instagramUrl,
      'isDeleted': instance.isDeleted,
      'communicationType': instance.communicationType,
      'isNotice': instance.isNotice,
      'isEmail': instance.isEmail,
      'isPhone': instance.isPhone,
      'loggedUserName': instance.loggedUserName,
      'communicationTypeList': instance.communicationTypeList,
      'idType': instance.idType,
      'idTypeList': instance.idTypeList,
      'idNumber': instance.idNumber,
      'bDocumentImage': instance.bDocumentImage,
      'pDocumentImagePath': instance.pDocumentImagePath,
      'isAddedByAffiliate': instance.isAddedByAffiliate,
      'affiliateId': instance.affiliateId,
      'contactType': instance.contactType,
      'contactCategory': instance.contactCategory,
      'contactTypeList': instance.contactTypeList,
      'enquiryListingModel': instance.enquiryListingModel,
      'sellerEnquiryListingModel': instance.sellerEnquiryListingModel,
      'offerListingModel': instance.offerListingModel,
      'buyerOfferListingModel': instance.buyerOfferListingModel,
      'contactNotes': instance.contactNotes,
      'contactChanges': instance.contactChanges,
      'isAgentLogged': instance.isAgentLogged,
      'isAffiliateLogged': instance.isAffiliateLogged,
      'loggedUserId': instance.loggedUserId,
      'followupDate': instance.followupDate,
      'note': instance.note,
      'isPrimary': instance.isPrimary,
      'tenantFolioDetails': instance.tenantFolioDetails,
      'supplierDetails': instance.supplierDetails,
      'propertyOwnerFolioDetails': instance.propertyOwnerFolioDetails,
      'image': instance.image,
      'contactReference': instance.contactReference,
      'postCodeName': instance.postCodeName,
      'solicitorFirmName': instance.solicitorFirmName,
      'solicitorPrincipalName': instance.solicitorPrincipalName,
      'solicitorAddress': instance.solicitorAddress,
      'solicitorEmail': instance.solicitorEmail,
      'solicitorPhone': instance.solicitorPhone,
      'solicitorFax': instance.solicitorFax,
      'propertyUniqueId': instance.propertyUniqueId,
    };

ContactNote _$ContactNoteFromJson(Map<String, dynamic> json) => ContactNote(
      id: (json['id'] as num?)?.toInt(),
      contactId: (json['contactId'] as num?)?.toInt(),
      createdAt: json['createdAt'] as String?,
      userId: (json['userId'] as num?)?.toInt(),
      userFullName: json['userFullName'],
      propertyId: (json['propertyId'] as num?)?.toInt(),
      propertyAddress: json['propertyAddress'],
      propertyUniqueId: json['propertyUniqueId'] as String?,
      noteType: (json['noteType'] as num?)?.toInt(),
      description: json['description'] as String?,
      isDeleted: json['isDeleted'] as bool?,
      isPrivate: json['isPrivate'] as bool?,
      deletedOn: json['deletedOn'] as String?,
      followupDate: json['followupDate'],
    );

Map<String, dynamic> _$ContactNoteToJson(ContactNote instance) =>
    <String, dynamic>{
      'id': instance.id,
      'contactId': instance.contactId,
      'createdAt': instance.createdAt,
      'userId': instance.userId,
      'userFullName': instance.userFullName,
      'propertyId': instance.propertyId,
      'propertyAddress': instance.propertyAddress,
      'propertyUniqueId': instance.propertyUniqueId,
      'noteType': instance.noteType,
      'description': instance.description,
      'isDeleted': instance.isDeleted,
      'isPrivate': instance.isPrivate,
      'deletedOn': instance.deletedOn,
      'followupDate': instance.followupDate,
    };
